SELECT * FROM [TABELA DE CLIENTES]

select distinct * from [TABELA DE CLIENTES]

SELECT EMBALAGEM,TAMANHO FROM [TABELA DE PRODUTOS]

SELECT DISTINCT EMBALAGEM,TAMANHO FROM [TABELA DE PRODUTOS] WHERE [SABOR] = 'Laranja'

-- DISTINCT TRAZER AS COLUNAS QUE NAO SE REPETEM

select * from [TABELA DE CLIENTES] order by [NOME] desc

-- orderby ordena em ordem asc ou desc

-- group by agrupa registros com base em umaa outra condicao

 select ESTADO, [LIMITE DE CREDITO] FROM [TABELA DE CLIENTES]
 SELECT ESTADO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] GROUP BY ESTADO


 -- COUNT(*) RETORNA O NUMERO DE VEZES QUE A OCORRENCIA DE UMA COLUNA OCORRE
 SELECT EMBALAGEM, COUNT(*) FROM [TABELA DE PRODUTOS] GROUP BY EMBALAGEM


 SELECT BAIRRO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES]
 WHERE ESTADO = 'SP' GROUP BY BAIRRO


 --- having condicao/filtro que se aplica ao resultado de uma agregacao por exemplo com groupBy 

 SELECT BAIRRO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES]
 WHERE ESTADO = 'SP' GROUP BY BAIRRO having sum([LIMITE DE CREDITO]) >= 10000



 SELECT * FROM [TABELA DE PRODUTOS]

SELECT [NOME DO PRODUTO],
CASE WHEN [PREÇO DE LISTA] >= 12 THEN 'PRODUTO CARO'
WHEN [PREÇO DE LISTA] >= 7 AND [PREÇO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
ELSE 'PRODUTO BARATO' END
FROM
[TABELA DE PRODUTOS]

SELECT [NOME DO PRODUTO],
CASE WHEN [PREÇO DE LISTA] >= 12 THEN 'PRODUTO CARO'
WHEN [PREÇO DE LISTA] >= 7 AND [PREÇO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
ELSE 'PRODUTO BARATO' END,
AVG([PREÇO DE LISTA])
FROM
[TABELA DE PRODUTOS]
GROUP BY [NOME DO PRODUTO],
CASE WHEN [PREÇO DE LISTA] >= 12 THEN 'PRODUTO CARO'
WHEN [PREÇO DE LISTA] >= 7 AND [PREÇO DE LISTA] < 12 THEN 'PRODUTO EM CONTA'
ELSE 'PRODUTO BARATO' END

SELECT YEAR(DATA), COUNT(*) FROM [NOTAS FISCAIS] GROUP BY YEAR(DATA)


--LEFT JOIN = TRAZ TUDO QUE ESTA ANTES DO COMANDO LEFT JOIN E SOMENTE OS QUE TEM LIGACAO NA TABELA DIREITA...TABELA DIREITA = 
--TABELA QUE VEM A SEGUIR DO COMANDO LEFT

--QUERY LEFT JOIN EX QUE TRAZ QUE NAO FEZ COMPRA NOTA FISCAL
SELECT	[TABELA DE CLIENTES].[CPF], [TABELA DE CLIENTES].[NOME], COUNT(*) FROM [TABELA DE CLIENTES]
LEFT JOIN
[NOTAS FISCAIS] ON [TABELA DE CLIENTES].[CPF] = [NOTAS FISCAIS].[CPF]
GROUP BY [TABELA DE CLIENTES].[CPF], [TABELA DE CLIENTES].[NOME]

--RIGH JOIN TRAZ TUDO QUE ESTA DEPOIS DO RIGHT E APENAS O QUE TEM LIGACAO COM A TABELA ANTES DO RIGHT

---UNION USADO EM 2 TABELAS OU + EM QUE AS COLUNAS SELECIONADAS SEJAM DO MESMO TIPO, E APLICA UM DISTINCT AUTOMATICO
---UNION ALL USADO EM 2 TABELAS OU + EM QUE AS COLUNAS SELECIONADAS SEJAM DO MESMO TIPO, TRAZENDO OS REPEDITOS / SEM DESTINCT


---SUB SELECT 
--SELECTIONA NOME/BAIRRO ONDE O BAIRRO EXISTA NA TABELA DE VENDEDORES
SELECT NOME, BAIRRO FROM [TABELA DE CLIENTES]
WHERE BAIRRO IN(SELECT BAIRRO FROM [TABELA DE VENDEDORES])

--SUB SELECT
SELECT NOVA_CONSULTA.EMBALAGEM, NOVA_CONSULTA.MAX_PRECO
FROM (SELECT EMBALAGEM, MAX([PREÇO DE LISTA]) AS MAX_PRECO FROM[TABELA DE PRODUTOS] GROUP BY EMBALAGEM)
NOVA_CONSULTA
WHERE NOVA_CONSULTA.MAX_PRECO <=5